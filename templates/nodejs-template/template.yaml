apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: nodejs-starter
  title: Node.js Service
  description: Create a new Node.js microservice
  tags:
    - recommended
    - nodejs
    - javascript
spec:
  owner: platform-team
  type: service
  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - owner
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          pattern: '^([a-z0-9\-]+)$'
        description:
          title: Description
          type: string
          description: Help others understand what this service is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
              - bitbucket.org
            allowedOwners:
              - ZensarIDP
            allowedWorkspaces:
              - ZensarIDP

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        replace: true
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          repoHost: ${{ parameters.repoUrl | parseRepoUrl | pick('host') | replace('github.com', 'github') | replace('bitbucket.org', 'bitbucket') }}

    - id: setup-github-workflows
      name: Setup GitHub Workflows
      if: ${{ (parameters.repoUrl | parseRepoUrl).host === 'github.com' }}
      action: fetch:template
      input:
        url: ./skeleton/ci-cd/github
        targetPath: .github
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}

    - id: setup-bitbucket-pipelines
      name: Setup Bitbucket Pipelines
      if: ${{ (parameters.repoUrl | parseRepoUrl).host === 'bitbucket.org' }}
      action: fetch:template
      input:
        url: ./skeleton/ci-cd/bitbucket
        targetPath: .
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}

    - id: publish-github
      name: Publish to GitHub
      if: ${{ (parameters.repoUrl | parseRepoUrl).host === 'github.com' }}
      action: publish:github
      input:
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: dev
        repoVisibility: public

    - id: publish-bitbucket
      name: Publish to Bitbucket Cloud
      if: ${{ (parameters.repoUrl | parseRepoUrl).host === 'bitbucket.org' }}
      action: publish:bitbucketCloud
      input:
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: dev
        repoVisibility: public

    - id: register-github
      name: Register in Catalog (GitHub)
      if: ${{ (parameters.repoUrl | parseRepoUrl).host === 'github.com' }}
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-github'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

    - id: register-bitbucket
      name: Register in Catalog (Bitbucket)
      if: ${{ (parameters.repoUrl | parseRepoUrl).host === 'bitbucket.org' }}
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-bitbucket'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ (parameters.repoUrl | parseRepoUrl).host === 'github.com' and steps['publish-github'].output.remoteUrl or 'https://bitbucket.org/zensaridp/' + parameters.component_id }}
      - title: Open in catalog
        icon: catalog
        entityRef: component:default/${{ parameters.component_id }}
