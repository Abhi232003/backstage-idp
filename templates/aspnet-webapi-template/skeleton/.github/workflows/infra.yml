name: Infrastructure Provisioning

on:
  push:
    branches: [main]
    paths: ['infra/**']
  workflow_dispatch:

jobs:
  terraform:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    
    env:
      TF_VAR_project_id: "${{ values.gcpProjectId }}"
      TF_VAR_region: "${{ values.gcpRegion }}"
      TF_VAR_database_type: "${{ values.database }}"
      TF_VAR_database_name: "${{ values.databaseName }}"
    
    defaults:
      run:
        working-directory: infra
    
    permissions:
      contents: read
      id-token: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Debug Environment Variables
      run: |
        echo "Project ID: $TF_VAR_project_id"
        echo "Region: $TF_VAR_region"
        echo "Database Type: $TF_VAR_database_type"
        echo "Database Name: $TF_VAR_database_name"
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ '${{ secrets.GCP_SA_KEY }}' }}
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0
    
    - name: Terraform Format
      run: terraform fmt -check
    
    - name: Terraform Init
      run: terraform init
    
    - name: Terraform Validate
      run: terraform validate
    
    - name: Terraform Plan
      run: terraform plan -input=false
    
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
    
    - name: Output Summary
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "Infrastructure provisioned successfully!"
        echo "Database instance: $(terraform output -raw database_connection_name 2>/dev/null || echo 'none')"
